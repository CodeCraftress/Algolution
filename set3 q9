#include <iostream>
#include <vector>

void printSpiralRecursive(const std::vector<std::vector<int>>& matrix, int top, int bottom, int left, int right) {
    if (top > bottom || left > right) return;  // Base case: no more elements to print

    // Print the top row from left to right
    for (int i = left; i <= right; ++i) {
        std::cout << matrix[top][i] << " ";
    }
    top++;

    // Print the right column from top to bottom
    for (int i = top; i <= bottom; ++i) {
        std::cout << matrix[i][right] << " ";
    }
    right--;

    // Print the bottom row from right to left, if remaining
    if (top <= bottom) {
        for (int i = right; i >= left; --i) {
            std::cout << matrix[bottom][i] << " ";
        }
        bottom--;
    }

    // Print the left column from bottom to top, if remaining
    if (left <= right) {
        for (int i = bottom; i >= top; --i) {
            std::cout << matrix[i][left] << " ";
        }
        left++;
    }

    // Recur with updated boundaries
    printSpiralRecursive(matrix, top, bottom, left, right);
}

int main() {
    std::vector<std::vector<int>> matrix = {
        {1, 2, 3, 4},
        {5, 6, 7, 8},
        {9, 10, 11, 12},
        {13, 14, 15, 16}
    };
    printSpiralRecursive(matrix, 0, matrix.size() - 1, 0, matrix[0].size() - 1);
    return 0;
}

